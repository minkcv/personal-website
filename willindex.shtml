<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Michael's overly complex method of messing with Will" />
		<meta name="keywords" content="michael,ripley,home,will,smith,swf,loop,shenanigans" />
		<meta name="author" content="Michael Ripley" />
		<title>SUPER WILL HOME PAGE 9000</title>
		<link rel="stylesheet" type="text/css" href="/css/style.css">
		<!--[if lt IE 9]>
			<script src="/js/html5shiv.min.js"></script>
		<![endif]-->
		<script src="/js/jquery.min.js"></script>
		<style>
			h2 > a:link, h2 > a:visited {
				color: #D4D4D4;
			}
			span.dim {
				color: #4D4D4D; /* I guess this is redundant now... */
				font-size: 0.6em;
				text-shadow: none;
			}
			a.dim:link, a.dim:visited {
				color: #295E77;
			}
			span.linkoverlay { /* This is a crazy hack that totally works */
				position:absolute; 
				width:100%;
				height:100%;
				top:0;
				left: 0;
				z-index: 1;
				background-image: url('/img/empty.gif'); /* fixes overlap error in IE7/8 */
			}
			a.button {
				display: block;
				font-size: 16px;
				text-decoration: none;
				color: #36D900;
				background-color: #222222;
				height: 30px;
				-webkit-transition: padding-right 0.3s; /* Safari */
				transition: padding-right 0.3s;
				line-height: 30px;
				vertical-align:middle; /* valign center text */
				text-align: center; /* haligh center text */
				border-radius: 15px;
				overflow: hidden;
				margin-top: 10px;
				margin-bottom: 10px;
			}
			a.button:active {
				color: #FF0000;
			}
			a.button:hover {
				background-color: #444444;
			}
		</style>
	</head>
	<body>
		<div id="container">
			<header><h1>WILL THIS IS FOR YOU</h1></header>
			<!--#include virtual="/snippets/navbar.shtml" -->
			<main class="hasSideBar">
				<div id="swfSlot">
					<!-- This is filled in by javascript -->
					<noscript>
						<p>If you think this looks ugly turn on JavaScript</p>
						<iframe style="width: 1280px; height: 720px" src="/php/randomwillswf.php" seamless="seamless" frameborder="0" scrolling="no"></iframe>
					</noscript>
				</div>
				<form name="options" style="text-align: center">
					<a id="nextbutton" class="button" style="margin-left: auto; margin-right: auto; width: 120px;" href="./willindex.shtml">
						Next SWF
					</a>
					<input id="pausedcheckbox" type="checkbox" name="paused" value="1" checked="checked" disabled="disabled">
						Loop Current SWF
					</input>
				</form>
				<div style="text-align: center; margin-top: 10px">
					<span class="dim" style="position: relative; margin-left: auto; margin-right: auto">
						<a href="/index.shtml"><span class="linkoverlay"></span></a> <!-- MAGIC to make the entire parent element, which must be relative, a clickable link -->
						...but if you actually need the real index it's
						<a style="position: relative; z-index: 2" class="dim" href="/index.shtml">here</a><!-- Extra sparkles to make the real link still underline on mouseover -->
					</span>
				</div>
				<p>
					If something seems off, check the debug info in the Javascript console (Ctrl + Shift + J).
					If something <i>is</i> off, tell me about it.
					I know of at least one swf (ahahahaha.swf) where the swf length calculation comes out wrong.
					All I can really do is remove the offending swfs.
				</p>
			</main>
			<!--#include virtual="/snippets/footer.html" -->
		</div>
		<!--#include virtual="/snippets/piwik.html" -->
		<script type="text/javascript">
			
			// shim to fix IE8 and earlier being shit
			if (!Date.now) {
				Date.now = function() { return new Date().getTime(); }
			}
			
			var timeoutID;
			var initialTimeoutID;
			var currentFilename;
			var finished = false;
			var timeLoaded;
			
			function paused()
			{
				return $('#pausedcheckbox').prop('checked');
			}
			
			function onPauseChange()
			{
				if (!paused()) // if we changed from paused to unpaused
				{
					if (finished)
					{
						loadNextSwf();
					}
				}
			}
			
			function onNextButtonClick()
			{
				var currentTime = Date.now();
				
				// the user did not click immediately after a refresh
				if (currentTime - timeLoaded > 500)
				{
					loadNextSwf();
				}
				
				return false; // cancel normal html link navigation
			}
			
			function onObjectLoaded(swf)
			{
				var time = parseFloat(swf.attr('time')); // time in seconds 
				if (time > 10)
				{
					timeoutID = setTimeout(loadNextSwf, Math.floor(1000 * parseFloat(time)));
					console.log("Refresh queued in " + time + " seconds");
				}
				else
				{
					timeoutID = setTimeout(loadNextSwf, 60000);
					console.log("Refresh queued in 60 seconds (object loops)");
				}
			}
			
			function loadNextSwf(requested)
			{
				// clear any running timers
				if (timeoutID) {
					clearTimeout(timeoutID);
					timeoutID = null;
				}
				if (initialTimeoutID) {
					clearTimeout(initialTimeoutID);
					initialTimeoutID = null;
				}
				
				finished = true;
				if (!paused())
				{
					finished = false;
					
					if (requested)
					{
						$('#swfSlot').load('/php/randomwillswf.php?swf=' 
								+ requested, queueRefresh); // should already be urlencoded
					}
					else
					{
						$('#swfSlot').load('/php/randomwillswf.php', queueRefresh);
					}
				}
				else
				{
					console.log("waiting for 'paused' checkbox to be unchecked");
				}
			}
			
			function ohHashChange()
			{
				if (location.hash)
				{
					var newFilename = location.hash.substring(1);
					if (newFilename != currentFilename)
					{
						console.log("hash changed to " + location.hash);
						loadNextSwf(newFilename);
					}
				}
			}
			
			// called after the current swf is done loading
			function queueRefresh()
			{
				timeLoaded = Date.now();
			
				// first, lets do some debug logging
				var debugText = $('#swfDebug').text();
				if (debugText) {
					console.log(debugText);
				}
				
				
				var id = initialTimeoutID = setTimeout(function (){
				
					var swf = $('#randomSWF');
					var filename = swf.attr('data');
					filename = filename.substring(filename.lastIndexOf('/') + 1);
					currentFilename = filename;
					location.hash = '#' + filename; // might need to be urlencoded
					if (swf.attr('type') === "application/x-shockwave-flash")
					{
						//Set up a timer to periodically check value of PercentLoaded
						var loadCheckInterval = setInterval(function (){
							
							
							//Ensure Flash Player's PercentLoaded method is available and returns a value
							if(typeof document.randomSWF.PercentLoaded !== "undefined" && document.randomSWF.PercentLoaded())
							{
								var swfPercent = document.randomSWF.PercentLoaded();
								console.log(swfPercent + "% loaded");
								//Once value == 100 (fully loaded) we can do whatever we want
								if (id != initialTimeoutID)
								{
									clearInterval(loadCheckInterval);
								}
								else if(swfPercent >= 100) // it has probably started playing
								{
									//Clear timer
									clearInterval(loadCheckInterval);
									
									//Execute function
									onObjectLoaded(swf);
								}
							}
							else
							{
								console.log("0% loaded");
							}
						}, 100);
					}
					else
					{
						// not a swf, so skip the loading polling
						onObjectLoaded(swf);
					}
				}, 200);
			}
			
			var pausedCheckbox = $('#pausedcheckbox')
			pausedCheckbox.removeAttr("checked");
			pausedCheckbox.removeAttr("disabled");
			pausedCheckbox.change(onPauseChange);
			$('#nextbutton').click(onNextButtonClick);
			$(window).on('hashchange', ohHashChange);
			
			// load the initial swf
			if (location.hash)
			{
				loadNextSwf(location.hash.substring(1));
			}
			else
			{
				loadNextSwf();
			}
			
		</script>
	</body>
</html>
